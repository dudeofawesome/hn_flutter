os:
  - linux
sudo: false

language: dart
dart:
  - dev

addons:
  apt:
    # sky_shell binary depends on /usr/lib/x86_64-linux-gnu/libstdc++.so.6 version GLIBCXX_3.4.18
    sources:
      # if we don't specify this, the libstdc++6 we get is the wrong version
      - ubuntu-toolchain-r-test
    packages:
      - lib32stdc++6
      - libstdc++6
      - fonts-droid
      - oracle-java8-set-default
cache:
  bundler: true
  directories:
    - $HOME/.pub-cache

# https://docs.travis-ci.com/user/customizing-the-build#Building-Specific-Branches
branches:
  only:
    - master
    - develop
    - /^release\/.*$/
    - hotfixes
    - /^hotfix\/.*$/
    - feat/travis
    - feat/tests

before_install:
  # decrypt private files
  - openssl aes-256-cbc -K $encrypted_0148444d11bc_key -iv $encrypted_0148444d11bc_iv
    -in android/secrets.tar.enc -out android/secrets.tar -d
  - tar xvf android/secrets.tar -C android
  # install build tools
  - pushd dev/bots/ci
  - pub get
  - popd
  - source dev/bots/ci/install-android-sdk.bash
  - source dev/bots/ci/install-flutter.bash
  # install Ruby gems, including Fastlane
  - gem update --system
  - gem install bundler
  - bundle install --quiet
  - fastlane --version
install:
  - flutter packages get

script:
  - flutter test --name='unit test'
  - flutter build apk --release

after_success: |
  DEPLOY=false
  DEPLOY_PROD=false
  DEPLOY_DEV=false

  if [[ -n "$(git show-ref --tags | grep $(git log --pretty=format:"%H" -1))" ]]; then
    DEPLOY=true

    if [[ "$TRAVIS_TAG" =~ ^v[0-9]+(\.[0-9]+){2,2}$ ]]; then
      DEPLOY_PROD=true
    elif [[ "$TRAVIS_TAG" =~ ^v[0-9]+(\.[0-9]+){2,2}-.+$ ]]; then
      DEPLOY_DEV=true
    fi
  fi

  if [[ "$DEPLOY_PROD" = true ]]; then
    DEPLOY=true
    FASTLANE_TRACK=production
  if [[ "$DEPLOY_DEV" = true ]]; then
    DEPLOY=true
    FASTLANE_TRACK=beta
  fi

  echo "DEPLOY = $DEPLOY"
  echo "DEPLOY_PROD = $DEPLOY_PROD"
  echo "DEPLOY_DEV = $DEPLOY_DEV"
  echo "FASTLANE_TRACK = $FASTLANE_TRACK"

deploy:
  - provider: script
    script: dev/bots/ci/travis-deploy.bash
    skip_cleanup: true
    on:
      all_branches: true
      condition: $DEPLOY == true
  # - provider: releases
  #   api_key: ""
  #   # TODO: figure out how to use vars
  #   name: ""
  #   body: ""
  #   # TODO: figure out how to upload a Google-signed APK
  #   file: "build/app/outputs/apk/release/app-release.apk"
  #   prerelease: true
  #   skip_cleanup: true
  #   on:
  #     all_branches: true
  #     condition: $DEPLOY == true
